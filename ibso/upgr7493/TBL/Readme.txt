        Порядок заполнения информации о перестроении таблиц
              во время проведения UPGRADE ТЯ.

1. При проведении UPGRADE ТЯ в режиме перестроения таблиц
набор перестраиваемых таблиц указывается в таблицах словаря
class_partitions и project. На основании записей в этих
таблицах во время UPGRADE в подкаталоге compile формируются
скрипты перестроения *.tbl (<owner>.tbl для основного процесса
и <owner>-1.tbl, <owner>-2.tbl, <owner>-3.tbl для 3-х
дополнительных, где <owner> - имя владельца схемы IBSO),
которые и запускаются на выполнение.

2. Информация о перестроении таблиц должна быть занесена
в таблицы project и class_partitions до запуска основного
скрипта UPGRADE (UPGR.BAT или UP.BAT). Соответственно,
таблицы project и class_partitions должны существовать.
Их можно создать отдельно с помощью скрипта cls_prt.sql
подкаталога V5X (это может потребоваться, если исходная версия
ТЯ ниже, чем 5.0, при этом будут запрошены имена табличных
пространств для этих таблиц и индексов на них), который следует
выполнить из-под владельца IBSO (например, через SQL*Plus).

3. Если исходная версия ТЯ ниже, чем 5.0, тогда заносить
информацию о перестраиваемых таблицах не обязательно, она
будет создана автоматически исходя из следующих принципов:
в первый дополнительный процесс включается самая большая
по размеру таблица (<owner>-1.tbl), во второй - вторая по
величине (<owner>-2.tbl), в третий - третья по величине
(<owner>-3.tbl), остальные в основной процесс (<owner>.tbl).
При этом, если в таблицу project будет занесена информация по
отдельным таблицам, то при перестроении будет использована
именно эта информация, т.е. автоматическое заполнение не
перекрывает уже существующую информацию.

4. Если исходная версия ТЯ ниже, чем 6.3.1.6, то для корректного
заполнения таблицы project требуется пересоздать на ней триггер
с помощью выполнения скрипта c_proj.sql под владельцем IBSO
(например, через SQL*Plus).

5. Если предполагается разделение ряда прикладных таблиц на секции
(partitions) во время проведения UPGRADE, тогда нужно до проведения
основного этапа UPGRADE занести информацию о разделяемых таблицах
в таблицу CLASS_PARTITIONS, заполнив следующие колонки таблицы:

CLASS_ID  - ID (короткое имя) ТБП, который требуется разделить
            (партифицировать).
CONDITION - условие разделения.
TABLESPACE_NAME - имя табличного пространства для таблицы архивного
                  раздела.
IDX_TABLESPACE  - имя табличного пространства для индексов таблицы
                  архивного раздела.

Имена табличных пространств задавать не обязательно, если они
не задаются, тогда будут использованы табличные пространства
из глобальных настроек системы (настройки PART_TABLESPACE,
IDXPART_TABLESPAСE из storage_parameters).
В качестве условия нужно занести строку, содержащую SQL-выражение,
с помощью которого будет построено условие WHERE для секционирования
соответствующей таблицы типа. Таким образом, записи, удовлетворяющие
этому условию, будут перенесены в архивный раздел, а остальные останутся
в текущем. До проведения нужно тщательно проанализировать условие
разделения на предмет отсутствия ошибок (условие не должно содержать
синтаксических ошибок SQL, а также не должно обращаться в NULL для
всех данных разделяемой таблицы) и оценить объемы переносимых данных
в архивные разделы и размеры свободного пространства в табличных
пространствах. В тексте условия можно использовать алиас Т для
обращения к колонкам разделяемой таблицы.  В случае если используется
режим создания архивов по механизму partition view (при значении глобальной 
настройки PARTITION_OPTION, равной VIEW, см.п.12) возможен
режим логического создания архивных разделов (т.е. текущая таблица
становится актуальным разделом, архивная таблица добавляется пустой) -
для этого в качестве условия следует указать строку '<DEFINITION>'.
Если префикс условия задан в виде строки '<ACTUAL>', то условие,
следующее после префикса, будет использоваться только для переноса
данных в новый актуальный раздел, причем перенесены будут данные, 
не удовлетворяющие этому условию; новый же архивный раздел
будет создан пустым (данный режим может быть использован как
ускоренный вариант партификации, т.к. данные переносятся только
в актуальный раздел; архивный раздел может быть заполнен отдельно 
при партификации клона рабочей БД, с последующим подключением
к рабочей БД архивного раздела с данными, заполненными на клоне). 

6. Дополнительные настройки для партифицируемых типов, а также
другие режимы перестроения таблиц, разнесение их по параллельным
процессам (до 3-х дополнительных процессов) и указание порядка
перестроения в каждом процессе можно занести в таблицу PROJECT:

NAME - ID (короткое имя) ТБП, таблицу которого требуется перестраивать.
TYPE - константа 'UPGRADE' (идентификация записей для UPGRADE).

Эти поля обязательны к заполнению, кроме случая с разделением
таблиц (п.5), когда ведущей записью является запись в class_partitions,
запись в project является подчиненной для нее и в ней просто могут
указываться дополнительные настройки (например, номер процесса,
порядок, табличные пространства актуального раздела и другие),
задаваемые значениями следующих полей:

BUILD - номер процесса (от 1 до 3) для перестроения таблицы
        (если не указывается или указано неправильное значение,
        то перестроение таблицы направляется в основной процесс);
ORD - порядковый номер перестраиваемой таблицы, перестроение таблиц
      будет производиться в порядке возрастания порядкового номера
      (если порядковые номера не заданы, либо совпадают, тогда
      упорядочивание производится по ID типа, указанного
      в колонке NAME);
CRT_USER - имя табличного пространства для новой таблицы (или
           для актуального раздела при разделении);
MOD_USER - имя табличного пространства для индексов на новой таблице
           (или для индексов таблицы актуального раздела при разделении);
STAGE - коэффициент умножения расчетных размеров экстентов вновь
        создаваемых таблиц (если не задан, то по умолчанию
        принимается значение 0.9 при перестроении или 0.5 при
        разделении). Если при разделении задано отрицательное
        значение в диапазоне от 0 до -1, то заданное абсолютное
        значение будет использовано как доля переносимых данных
        в архивный раздел (при этом не будет производиться
        подсчет этой доли по заданному условию перед началом
        разделения).

Если настройки табличных пространств не указаны, тогда будут использоваться
табличные пространства из глобальных настроек системы (настройки
TAB_TABLESPACE, IDX_TABLESPAСE из storage_parameters).
Могут быть заданы дополнительные опции перестроения таблиц
в следующих полях:

NOTES - условие переноса данных из старой таблицы в новую. Условие
        должно содержать строку, представляющую собой SQL выражение
        для WHERE-clause. Данные исходной таблицы, удовлетворяющие
        этому условию, при перестроении будут перенесены в новую
        таблицу, а данные, не удовлетворяющие этому условию, будут
        удалены. В тексте условия можно использовать алиас Т для
        обращения к колонкам перестраиваемой таблицы. При указании
        условия рекомендуется оценить объем переносимых данных и
        установить значение поля STAGE, соответствующее доле переносимых
        данных (если его не задать, то новые таблицы будут созданы
        по размерам исходных, в то время как данных будет перенесено
        ограниченное заданным условием количество). Если тип партифицирован, 
        то префикс условия в виде строки '<ACTUAL>' означает условие только 
        для актуального раздела, т.е. будет инициирован перенос данных
        только актуального раздела, данные архивных разделов переноситься
        не будут, и, соответственно, будут удалены.
PARAM_GROUP - при перестроении таблиц, имеющих архивные разделы,
              в этом поле может быть указано положительное число,
              определяющее номер раздела/зеркала, который нужно
              перестраивать (не затрагивая другие архивные разделы),
              значение 0 - для перестроения актуальной таблицы и всех
              ее архивных разделов и зеркал. Отрицательное значение
              определяет режим перестроения с соединением (слиянием) архивных
              разделов в одну таблицу (департификация), причем абсолютное
              значение определяет порядковый номер раздела, начиная с которого
              данные будут перенесены в объединенную таблицу.
LOADDATA - определяет дополнительные режимы перестроения таблиц:
     - при разделении таблиц, значение '0' инициирует разделение через
           команду SPLIT PARTITION, любое другое значение инициирует
           разделение через перестроение таблицы путем создания временной
           копии и последующего переноса в нее данных (первый вариант может быть
           более быстрым по времени выполнения, однако требует большего запаса
           по свободному табличному пространству, второй вариант более надежен
           в смысле защиты от возможных ошибок перестроения, т.к. в случае их
           возникновения всегда остается старая таблица в своем исходном состоянии).
           В случае первичного разделения значение LOADDATA несущественно, т.к.
           разделение всегда происходит через перестроение.
     - при перестроении таблиц, значение '0' инициирует только перенос
           данных из таблицы (ALTER TABLE ... MOVE STORAGE), не изменяя ее
           структуру (т.е. неиспользуемые колонки не удаляются, несоответствия
           имен колонок и квалификаторов реквизитов не устраняются).
           Значение '1' инициирует перестроение таблицы через создание новой
           со структурой, соответствующей текущему описанию словаря IBSO,
           с пересозданием всех индексов и ограничений целостности на вновь
           созданной таблице (включая системные индексы и ограничения по ссылкам
           и коллекциям). Любое другое значение (или его отсутствие) инициирует
           стандартный режим перестроения через создание новой таблицы с
           правильной структурой с перестроением всех пользовательских индексов
           и ограничений целостности (без пересоздания системных индексов и
           ограничений).
OWNER - номер процесса (0 - основной процесс, от 1 до 3 - дополнительные) для создания 
        системных индексов и ограничений целостности на перестраиваемой таблице
        (если не указывается или указано неправильное значение,
        то построение системных индексов направляется в тот же процесс, который
        назначен перестраиваемой таблице в поле BUILD).

7. Существует возможность явного указания процедуре перестроения
таблиц какие из системных индексов должны быть созданы в
процессе перестроения (т.к. системные индексы по умолчанию не
создаются). Такие индексы могут потребоваться для эффективного
выполнения условий перестроения других таблиц. Для этого также нужно
сформировать записи в таблице PROJECT следующим образом:

NAME  - ID (короткое имя) ТБП, индекс на которой требуется построить;
TYPE  - константа 'UPGRADE<N>', где <N> некоторый порядковый номер,
        (уникальный для разных индексов на одной таблице) который нужен,
        чтобы отличать процедуре UPGRADE записи для индексов и таблиц;
FNAME - имя колонки на вновь создаваемой таблице, по которой требуется
        построить системный индекс;
BUILD - номер процесса (от 1 до 3) для построения индекса
        (должен совпадать с номером процесса для самой таблицы);
ORD - порядковый номер для процедуры построения индекса
      (должен быть больше порядкового номера собственной таблицы и
      меньше номера другой таблицы, для перестроения которой требуется
      указанный индекс);
LOADDATA - определяет тип системного индекса, значение '0' интерпретируется
           как индекс по ссылке (т.е. неуникальный индекс с именем
           Z#IX_<table_name>_REF<column position>), другие значения
           интерпретируются как индекс по колекции (т.е. уникальный
           индекс с именем Z#IX_<table_name>_COL<column position>);
STAGE - коэффициент умножения размеров экстентов первичного ключа
        для расчета экстентов создаваемого индекса (если не задан, то
        по умолчанию принимается значение 1, т.е. для индексов по
        коллекциям может не указываться, т.к. колонки-коллекции пустыми
        не бывают, как и сам первичный ключ, а для ссылок желательно
        указывать значение, соответствующее пропорции количества не пустых
        значений колонки к полному количеству записей в таблице).

8. Существует возможность включения в создаваемый скрипт
дополнительных команд, например, пауз. Для этого также нужно
сформировать записи в таблице PROJECT следующим образом:

NAME  - константа '<COMMAND>';
TYPE  - константа 'UPGRADE<N>', где <N> некоторый порядковый номер
        команды;
NOTES - текст/команда/комментарий для включения в скрипт в заданном
        процессе/позиции;
BUILD - номер процесса (от 1 до 3);
ORD   - порядковый номер.

9. Пересоздание системных индексов и ограничений целостности на
всех таблицах словаря (в т.ч. и перестраиваемых) производится
автоматически на этапе компиляции, причем делается это параллельно
самому процессу компиляции операций и представлений. Поэтому умолчательный
режим перестроения таблиц их не создает.

10. Для проверки правильности указания табличных пространств,
условий разделения/перестроения, оценки коэффициентов умножения
можно воспользоваться скриптом chk_proj.sql, который следует
выполнять из-под владельца IBSO. Информация выводится в
коммуникационный канал (пайпу) c именем DEBUG.

11. Для контроля правильности формирования скриптов, предварительного
их анализа и просмотра, перед запуском UPGRADE можно выполнить
скрипт c_prt1.sql, который формирует скрипты перестроения таблиц
(собственно, он вызывает основной скрипт c_prt.sql, который
запускается при выполнении UPGRADE). Скрипт c_prt1.sql запрашивает
следующие параметры, которые передаются в основной скрипт c_prt.sql:
- исходную версию ТЯ,
- путь для формирования скриптов (для текущего каталога следует указывать '.'),
- имя схемы глобального пользователя-владельца (владельца таблиц по умолчанию),
- имена умолчательных табличных пространств для таблиц и для индексов.
Созданные с помощью c_prt1.sql скрипты перестроения *.TBL можно
дополнительно подредактировать, и, соответственно, заменить
отредактированными скриптами автоматически создаваемые скрипты
в подкаталоге compile во время проведения UPGRADE (заменить
их можно в промежутке, когда скрипты уже создались, но еще не
запустились, например, во время компиляции пакетов ТЯ).

12. Для управления параметрами хранения и перестроения таблиц
существуют следующие настройки:

Системные параметры (SETTINGS):

STORAGE_INSERT_HINT - опциональный хинт для переноса данных при перестроении
                      таблиц. По умолчанию, если настройка не задана,
                      используется хинт 'APPEND'.
                      Если задано значение 'NOHINT', то хинт при переносе не
                      указывается. В тексте хинта можно  использовать обращение
                      к таблице, в которую осуществляется вставка данных, по
                      алиасу T$, например, 'PARALLEL(T$,4) APPEND'.

STORAGE_FORCE_PARALLEL - настройка режима PARALLEL создания объектов хранения.
                    Значения настройки интерпретируются следующим образом:
                    - NO,0 или отсутствие настройки - параллельный режим
                      не используется (используется опция NOPARALLEL);
                    - YES,1 - используется автоматический (определяемый
                      Oracle) параллельный режим (используется опция PARALLEL);
                    - N > 1 - используется явно задаваемое количество
                      параллельных процессов (используется опция PARALLEL <N>).

STORAGE_FORCE_NOLOGGING - настройка режима NOLOGGING модификации и создания объектов
                    хранения. Значения настройки интерпретируются следующим образом:
                    - YES,1 или отсутствие настройки - режим NOLOGGING используется;
                    - NO,0 - NOLOGGING режим не используется (используется опция LOGGING).

STORAGE_FORCE_ONLINE - настройка режима ONLINE при модификации, создании и перестроении 
                    индексов на таблицах. Значения настройки интерпретируются следующим образом:
                    - YES,1 - режим ONLINE используется;
                    - NO,0 или отсутствие настройки - ONLINE режим не используется.


Глобальная группа настроек параметров хранения (STORAGE_PARAMETERS, PARAM_GROUP='GLOBAL'):

PARTITION_OPTION - настройка умолчательного режима создания архивных разделов
                    в таблицах типов.  Значения настройки интерпретируются следующим образом:
                    - PARTITION - архивация с использованием механизма секционирования
                                   oracle partitions (опция Oracle partitioning), этот режим используется
                                   по умолчанию, т.е. при отсутствии настройки как таковой;
                    - VIEW - архивация с использованием механизма partition view, т.е. путем
                                   создания архивных разделов как отдельных таблиц, объединяемых
                                   через представление, называемое partition view.

COMPRESS_PARTITIONS - настройка режима сжатия данных в архивных таблицах или
                    архивных разделах (признак использования опции COMPRESS для архивов):
                    Значения настройки интерпретируются следующим образом:
                    - YES,1 - для архивов (таблиц и индексов) используется опция COMPRESS;
                    - NO,0  или отсутствие настройки - опция COMPRESS не используется.

ESTIMATE_PERCENT  - процент обработки данных таблицы при сборе статистики в режиме
                    ESTIMATE (если настройка не задана, то по умолчанию используется
                    значение 10).

PARTITION_COUNT_HINT - Опциональный хинт для вычисления количества записей 
                       при расчете коэффициента умножения размеров экстентов создаваемых таблиц 
                       при разделении.В тексте хинта можно  использовать обращение
                       к секционируемой таблице по алиасу t, например, 'PARALLEL(t,4)'.

  Использование режимов parallel и nologging позволяет существенно ускорить
процесс переноса данных и создания индексов при наличии необходимых аппаратных
ресурсов (использование многопроцессорных систем, неполная загрузка системы
ввода-вывода и т.д.). Nologging режим подавляет генерацию REDO и ARCHIVE логов
при переносе и модификации данных, поэтому рекомендуется делать backup-ы данных
до и после выполнения структурных изменений прикладных данных.
  Использование COMPRESS option (опции сжатия) для архивных данных позволяет
существенно уменьшить размеры архивных таблиц и разделов за счет оптимизации хранения
часто повторяющихся значений. Опция COMPRESS может использоваться только
для версии Oracle 10.2 и выше.

