        Назначение FIO

	Библиотека FIO содержит процедуры для работы с файловой
системой на сервере, перекрывающие по функционалу UTL_FILE.


	Установка FIO.

  1. Создается HOME-каталог FIO (например, /u/tools/fio) из-под
некоего пользователя (желательно завести отдельного пользователя,
если это не критично, то можно и под пользователем oracle).

  2. Копируется файл libfio.sl/libfio32.sl/libfio64.sl (для HP-UX) или
libfio.so/libfio32.so/libfio64.so (для других платформ) и выставляется
атрибут executable. Суффикс библиотеки 32/64 означает разрядность
библиотеки, она должна соответствовать разрядности используемой версии
Oracle.
  Библиотеку можно пересобрать самостоятельно с помощью скриптов mkfio*
для соответствующей серверной платформы из исходника fio.c (большинство
скриптов сборки ориентировано на компилятор gcc).

  3. Настраивается listener на сервере для инициализации поддержки
внешних процедур. Описание настройки см. файл TOOLS\listener.txt
каталога UPGRADE ТЯ.
 
  4. При установке UPGRADE ТЯ следует указать правильный путь к используемой
библиотеке fio, например, /u/tools/fio/libfio.so. Установка путей для
используемых библиотек в IBSO, в т.ч. библиотеки fio, осуществляется
сценарием FIRST.BAT из корня UPGRADE (см. readme.txt из поставки UPGRADE).

  5. Пакеты FIO/STDIO/UTL_FILE, обеспечивающие интерфейс файловых операций
библиотеки FIO, находятся на схеме-владельца IBSO (они входят в поставку
системы автоматически).


        Описание настроек FIO (таблица profiles):

    Пользователей системы можно подразделить на некоторые профили,
для которых можно задавать свои настройки доступных каталогов и
выполняемых команд. Принадлежность пользователя некоторому профилю
XXX определяется наличием свойства PROFILE в колонке PROPERTIES
в таблице USERS для соответствующего пользователя (PROPERTIES
должна содержать подстроку вида '|PROFILE XXX'). Если специальный
профиль не указан, то используются настройки с профилем DEFAULT.

FIO_LOG_FILE	- Файл журнала файловых операций (FIO), указывается
	полное имя файла (включая путь от корня), в него записывается
	информация, соответствующая установленному уровню отладки
	FIO_DEBUG_LEVEL:
	0 - нет журналирования,
	1 - регистрация сессий, ошибки выполнения функций,
	2 - переименование, удаление файлов, создание каталогов,
	    выполнение shell-команд,
	3 - чтение каталогов, открытие, закрытие файлов,
	4 - чтение, запись файлов, установка позиции в файле.
	Эта настройка одна на все профили и находится в профиле DEFAULT.

FIO_TEMP_DIR	- Каталог для загрузки временных файлов. 
	Относительный или абсолютный путь к каталогу временных файлов на сервере. 
	В случае, когда указан относительный путь, помимо существования каталога с 
	таким названием в корне директории, необходимо, чтобы этот каталог был перечислен
	в настройке FIO_BASE_DIR.
	Эта настройка одна на все профили и находится в профиле DEFAULT.

FIO_HOME_DIR	- Префикс имен каталогов настроек FIO (FIO_ROOT_DIR, FIO_BASE_DIR),
	т.е. указанный префикс автоматически добавляется ко всем именам
	каталогов, перечисляемым в настройках FIO_BASE_DIR и FIO_ROOT_DIR.
	Эта настройка одна на все профили и находится в профиле DEFAULT.

FIO_REPLACE_DIR	- Префикс имен каталогов, заменяемый на FIO_HOME_DIR при вызове
	функций FIO, т.е. указанный префикс автоматически замещается на FIO_HOME_DIR
	во всех функциях FIO, где используются параметры - имена каталогов или файлов.
	Эта настройка одна на все профили и находится в профиле DEFAULT.

FIO_ROOT_DIR	- Корневой каталог FIO (текущая директория), доступ
	к файлам разрешается от указанного каталога (включая все подкаталоги)
	в режиме true проверки  имен каталогов (параметр p_chk файловых операций
	пакета STDIO).
	Если в собственном профиле настройка отсутствует, то она берется
	из умолчательного профиля DEFAULT.

FIO_BASE_DIR	- Доступные каталоги FIO (разделенные ':' или ';'), доступ
	к файлам проверяется по совпадению с одним из указанных в списке каталогов
	в режиме false проверки имен каталогов (параметр p_chk файловых операций
	пакета STDIO). При указании имени '<CHECK_ROOT>' в списке каталогов будет
	включен доступ ко всему дереву подкатологов корневого каталога FIO_ROOT_DIR.
	Помимо '<CHECK_ROOT>' можно также задать список дополнительных каталогов.
	Если имя каталога оканчивается на слэш, то доступ также дается на все
	подкаталоги от указанного до слэша. К списку каталогов собственного профиля
	в конец добавляется также и список каталогов умолчательного профиля DEFAULT.

FIO_MAKE_DIR	- Флаг блокировки функций создания каталогов, если настройка равна
	YES, то функции создания каталогов будут доступны, если значение другое или
	настройка отсутствует, то функции создания каталогов будут блокированы.
	Эта настройка только cобственного профиля, т.е. она не перекрывается
	в профиле DEFAULT.

FIO_DEBUG_LEVEL	- Уровень журналирования FIO, определяет степень подробности
	журналируемой информации (см. настройку FIO_LOG_FILE).
	Если в собственном профиле настройка отсутствует, то она берется
	из умолчательного профиля DEFAULT.

FIO_LHA_CMD	- Команда lha FIO.
	Если в собственном профиле настройка отсутствует, то она берется
	из умолчательного профиля DEFAULT.

FIO_ZIP_CMD	- Команда zip FIO.
	Если в собственном профиле настройка отсутствует, то она берется
	из умолчательного профиля DEFAULT.

JOB_PROFILE	- Эффективный профиль пользователя при выполнении через механизм
	заданий по расписанию, т.е. если под данным пользователем запускается
	задание, то эффективным профилем для задания становится профиль, указанный
	в настройке (если настройка не задана, то эффективный профиль задания будет
	совпадать с собственным профилем пользователя), и все настройки FIO будут
	взяты именно из эффективного профиля.
	Эта настройка только cобственного профиля, т.е. она не перекрывается
	в профиле DEFAULT.

    Можно добавлять другие команды FIO в виде FIO_<Identifier>_CMD,
а также формировать переменные окружения внешнего процесса в виде
FIO_<Identifier>, значения этих переменных окружения будут доступны
при запуске shell-команд. К списку команд и переменных окружения
собственномго профиля добавляется список команд и переменных окружения
умолчательного профиля DEFAULT.

    Существует режим работы с именами файлов, каталогов, файловых масок
нечувствительный к регистру этих имен (т.н. режим case insensitive), что
особенно актуально для WINDOWS платформы. Функции FIO по умолчанию
используют case sensitive режим, соответствующий UNIX платформам.
Чтобы задать case insensitive режим нужно указать отрицательное
значение настройки FIO_DEBUG_LEVEL (устанавливаемый уровень отладки
в этом случае будет DEBUG_LEVEL = -FIO_DEBUG_LEVEL-1, т.е. устанавливаемое
значение -1 будет соответствовать нулевому уровню отладки и case
insensitive режиму). Case insensitive режим действует также на функции
сортировки (при получении списков файлов) и на установку переменных
окружения.

